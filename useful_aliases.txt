NOTE FOR USE (newbies): If you're unfamiliar with bash aliases in Linux, they are simply a short word reserved to execute a command from the command line. You should always check that the script works before assuming it does, so type the long form into the terminal and check that the output is what was desired.

Where to put these scripts (newbies)?
"~/" aka "/home/$yourlocalusername/" typically contains a hidden file called ".bashrc". Simply open it up and look for a good place to put your custom aliases (some distros leave a hint in the comments, which are denoted by starting a line with a '#'). You can drop a line by pressing enter and type or copy/paste these in. You should see a few preset aliases already in that .bashrc file for things like 'la' which call 'ls -a' system command as a standard short form. Use the pre-defined alias scripts as reference guides if you're unsure or feeling unconfident.

Problems (newbies)?
"I entered my alias in and saved the script but my alias commands still don't work! What now?" - For the aliases we define to be ready for use the whole script file needs to be executed first. When we boot a Linux system it is called automagically on startup, making this process seamless. But if you just updated the file and saved it, your aliases may not be available until after the script is run, either by manually running the script yourself (CLI:~$ "bash ./bashrc") or by simply rebooting the PC.

# MY USEFUL ALIASES
# ClamAV virus scan 
alias systemscan='clamscan -vrz --statistics=pcre --scan-mail=yes --phishing-sigs=yes --phishing-scan-urls=yes --gen-json --dev-performance --max-scantime=2000000 /home/*'
alias sysscan=systemscan
alias scanall=sysscan
# Just remember this will scan everything under home, so there may be some recursion errors depending on
# any links or symbolic links / references in the home folder. It's best to modify this to suit your setup
# but this script serves as an easy template to start from

# Display disk usage of root and media folders, sorted by size and rendered in humna-readable format
alias diskusage='sudo du -hsx /* | sort -rh | head -n 45; sudo du -hsx /media/* | sort -rh | head -n 45; lsblk'

# Checks S.M.A.R.T. temperature sensors on connected devices connected to SATA / SCSI
alias temp='sudo watch hddtemp /dev/sd* -n 1'
alias temps=temp

# Insanely detailed system information printout
alias sysinfo='sudo fdisk -l; blkid; lshw; lscpu; lspci; cat /proc/version; diskusage; df -hl -x squashfs; temp;'

# Get current system information. Extremely useful when seeking help on forums, setting up new hardware, etc.
alias sysinfo='sudo fdisk -l; blkid; lshw; lscpu; lspci; cat /proc/version; diskusage; df -hl -x squashfs; temp;'

# Launch chrome browser as normal/incognito mode
alias chrome='google-chrome-stable'
alias chromei='google-chrome-stable --incognito'
# Launch chromium browser as normal/incognito mode
alias chromi='chromium-browser'
alias chromii='chromium-browser --incognito'

# For DOS kids...
alias cls='clear'

# Disable IPv6 so your mac address doesn't give away your identity while trying to browse anonymously over a VPN in a clean browser.
alias ip6="sudo sysctl net.ipv6.conf.default.disable_ipv6=1; sudo sysctl net.ipv6.conf.all.disable_ipv6=1"
alias rip6="sudo sysctl net.ipv6.conf.default.disable_ipv6=0; sudo sysctl net.ipv6.conf.all.disable_ipv6=0"

# Shorten/truncate the displayed path in the terminal
alias shorten='export PROMPT_DIRTRIM=1'

# SSH server start/stop
alias sshserver='sudo systemctl start ssh; systemctl status ssh; echo "run sshstop to stop server"'
alias sshstop='sudo systemctl stop ssh; systemctl status ssh'

# Nvidia GPU active monitoring
alias gpu='watch -n 1 nvidia-smi -q -d UTILIZATION'
alias gpumon='watch -n 1 nvidia-smi'

# RAM DISK
# Ever feel like using your RAM for hard drive storage? Fantastic way to quickly edit a batch of files without thrashing an SSD
#alias ramdisk="sudo mount -t tmpfs -o rw,size=16G tmpfs /mnt/ramdisk"
# Or you can use the better version that allows for entering the amount of ram to allocate to ramdisk drive as an argument by using the following instead...
# Create a ramdisk of variable size with integer parameter for size in gigabytes
ramd(){
	sudo mount -t tmpfs -o rw,size="$1"G tmpfs /mnt/ramdisk
}
# alias to mount the default ramdisk size
alias ramdisk="ramd 16"

# backup any file given, and save it in place with the extension bkp and the same name
bkp(){
	cp "$1" "$1".bkp
}
